// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("uodated_at")
  email      String   @unique
  password   String
  name       String   @unique
  avatarPath String   @default("/uploads/default-avatar.png") @map("avatar_path")
  phone      String   @default("")
  reviews    Review[]

  @@map("users")
}

model Post {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("uodated_at")
  title       String    @unique
  slug        String    @unique
  description String
  content     String
  images      String[]
  reviews     Review[]
  cotegory    Category? @relation(fields: [categoryId], references: [id])
  categoryId  Int?      @map("category_id")

  @@map("posts")
}

model Category {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("uodated_at")
  title     String   @unique
  posts     Post[]

  @@map("categoryes")
}

model Review {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("uodated_at")
  rating    Int
  text      String

  user   User @relation(fields: [userId], references: [id])
  userId Int  @map("user_id")

  post   Post @relation(fields: [postId], references: [id])
  postId Int  @map("post_id")

  @@map("reviews")
}
